# Aggregator
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aggregator
  labels:
    app: aggregator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aggregator
  template:
    metadata:
      labels:
        app: aggregator
    spec:
      containers:
      - name: operator
        image: <image_registry>/harmonia/operator
        imagePullPolicy: Always
        ports:
        - containerPort: 9080
          name: steward
        volumeMounts:
        - name: config
          mountPath: /app/config.yml
          subPath: aggregator-config.yml
        - name: shared-repos
          mountPath: /repos
      - name: application
        image: <image_registry>/harmonia/fedavg
        imagePullPolicy: Always
        volumeMounts:
        - name: shared-repos
          mountPath: /repos
      volumes:
      - name: config
        configMap:
          name: aggregator-config
      - name: shared-repos
        emptyDir: {}

---
kind: Service
apiVersion: v1
metadata:
  name: mnist-aggregator
spec:
  selector:
    app: aggregator
  ports:
  - name: aggregator
    port: 9080
    targetPort: 9080
  type: NodePort

---
# Edge1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge1
  labels:
    app: edge1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edge1
  template:
    metadata:
      labels:
        app: edge1
    spec:
      containers:
      - name: operator
        image: <image_registry>/harmonia/operator
        imagePullPolicy: Always
        ports:
        - containerPort: 9080
          name: steward
        volumeMounts:
        - name: config
          mountPath: /app/config.yml
          subPath: edge-config.yml
        - name: shared-repos
          mountPath: /repos
      - name: application
        image: <image_registry>/mnist_edge
        imagePullPolicy: Always
        volumeMounts:
        - name: shared-repos
          mountPath: /repos
      volumes:
      - name: config
        configMap:
          name: edge1-config
      - name: shared-repos
        emptyDir: {}

---
kind: Service
apiVersion: v1
metadata:
  name: mnist-edge1
spec:
  selector:
    app: edge1
  ports:
  - name: edge1
    port: 9080
    targetPort: 9080
  type: NodePort

---
# Edge2
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge2
  labels:
    app: edge2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edge2
  template:
    metadata:
      labels:
        app: edge2
    spec:
      containers:
      - name: operator
        image: <image_registry>/harmonia/operator
        imagePullPolicy: Always
        ports:
        - containerPort: 9080
          name: steward
        volumeMounts:
        - name: config
          mountPath: /app/config.yml
          subPath: edge-config.yml
        - name: shared-repos
          mountPath: /repos
      - name: application
        image: <image_registry>/mnist_edge
        imagePullPolicy: Always
        volumeMounts:
        - name: shared-repos
          mountPath: /repos
      volumes:
      - name: config
        configMap:
          name: edge2-config
      - name: shared-repos
        emptyDir: {}

---
kind: Service
apiVersion: v1
metadata:
  name: mnist-edge2
spec:
  selector:
    app: edge2
  ports:
  - name: edge2
    port: 9080
    targetPort: 9080
  type: NodePort

---
# Logserver
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logserver
  labels:
    app: logserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logserver
  template:
    metadata:
      labels:
        app: logserver
    spec:
      containers:
      - name: operator
        image: <image_registry>/harmonia/logserver
        imagePullPolicy: Always
        ports:
        - containerPort: 9080
          name: logserver
        volumeMounts:
        - name: config
          mountPath: /app/config.yml
          subPath: logserver-config.yml
        - name: shared-tensorboard-data
          mountPath: /tensorboard_data
      - name: tensorboard
        image: tensorflow/tensorflow
        imagePullPolicy: Always
        ports:
        - containerPort: 6006
          name: tensorboard
        volumeMounts:
        - name: shared-tensorboard-data
          mountPath: /tensorboard_data
        command: ["tensorboard"]
        args: ["--logdir=/tensorboard_data", "--bind_all"]
      volumes:
      - name: config
        configMap:
          name: logserver-config
      - name: shared-tensorboard-data
        emptyDir: {}

---
kind: Service
apiVersion: v1
metadata:
  name: logserver
spec:
  selector:
    app: logserver
  ports:
  - name: logserver
    port: 9080
    targetPort: 9080
  - name: tensorboard
    port: 6006
    targetPort: 6006
  type: NodePort
